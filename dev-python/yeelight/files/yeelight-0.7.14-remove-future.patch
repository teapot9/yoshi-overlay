From f7f8587e14c0f43c72b44b5ecedee281d886aedb Mon Sep 17 00:00:00 2001
From: Louis Leseur <louis.leseur@gmail.com>
Date: Sat, 18 May 2024 13:12:21 +0200
Subject: [PATCH] remove future dependency

Python 2.7 isn't supported since v0.6.0, we don't need `future` nor
`__future__` anymore.
---
 pyproject.toml        |  1 -
 requirements_dev.txt  |  1 -
 yeelight/decorator.py |  2 --
 yeelight/main.py      | 10 ++++------
 4 files changed, 4 insertions(+), 10 deletions(-)

diff --git a/pyproject.toml b/pyproject.toml
index 0a52950..bb4f606 100644
--- a/pyproject.toml
+++ b/pyproject.toml
@@ -23,7 +23,6 @@ classifiers = [
     "Topic :: Software Development :: Libraries :: Python Modules",
 ]
 dependencies = [
-    "future",
     "ifaddr",
     "importlib_metadata; python_version<'3.8'",
     "async-timeout; python_version<'3.11'"
diff --git a/requirements_dev.txt b/requirements_dev.txt
index b27d9c7..51cfb69 100644
--- a/requirements_dev.txt
+++ b/requirements_dev.txt
@@ -7,7 +7,6 @@ sphinx-rtd-theme
 
 pytest
 coverage
-future
 pytest-cov
 
 gitchangelog
diff --git a/yeelight/decorator.py b/yeelight/decorator.py
index 225c2d0..dd6f206 100644
--- a/yeelight/decorator.py
+++ b/yeelight/decorator.py
@@ -28,8 +28,6 @@
 Decorator module, see http://pypi.python.org/pypi/decorator
 for the documentation.
 """
-from __future__ import print_function
-
 import collections
 import inspect
 import itertools
diff --git a/yeelight/main.py b/yeelight/main.py
index fb46e9b..adce4d7 100644
--- a/yeelight/main.py
+++ b/yeelight/main.py
@@ -4,8 +4,6 @@ import json
 import logging
 import socket
 
-from future.utils import raise_from
-
 from .decorator import decorator  # type: ignore
 from .enums import BulbType
 from .enums import LightType
@@ -722,7 +720,7 @@ class Bulb(object):
                 return
             self._notification_socket.close()
             self._notification_socket = None
-            raise_from(BulbException("Failed to read from the socket."), ex)
+            raise BulbException("Failed to read from the socket.") from ex
 
     def stop_listening(self):
         """Stop listening to notifications."""
@@ -815,9 +813,9 @@ class Bulb(object):
             # create a new one.
             self.__socket.close()
             self.__socket = None
-            raise_from(
-                BulbException("A socket error occurred when sending the command."), ex
-            )
+            raise BulbException(
+                "A socket error occurred when sending the command."
+            ) from ex
 
         if self._music_mode:
             # We're in music mode, nothing else will happen.
-- 
GitLab

